<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kanu.web.emp.Emp_manageDAO">

	<select id="getEmpList" resultType="empManVO">
		SELECT EMPLOYEE_ID  				as "employeeId"
		      ,EMPLOYEE_NAME   				as "employeeName"
		      ,to_char(CERTIFICATED_EXPIRED_DATE,'yyyy-mm-dd')    as "certificatedExpiredDate"
		      ,to_char(EMPLOYEE_BIRTH,'yyyy-mm-dd')       		as "employeeBirth"
		      ,EMPLOYEE_ADDRESS 			as "employeeAddress"
		      ,to_char(HIRE_DATE,'yyyy-mm-dd') 					as "hireDate"
		      ,to_char(RETIRE_DATE,'yyyy-mm-dd') 				    as "retireDate"
		      ,EMP_EMAIL					as "empEmail"
			  ,PASSWORD 					as "password"
		FROM EMP_MANAGE
		ORDER BY EMPLOYEE_ID
		
	</select>
<select id="getEmpList2" resultType="empManVO">
		SELECT EMPLOYEE_ID  				as "employeeId"
		      ,EMPLOYEE_NAME   				as "employeeName"
		      ,CERTIFICATED_EXPIRED_DATE    as "certificatedExpiredDate"
		      ,EMPLOYEE_BIRTH       		as "employeeBirth"
		      ,EMPLOYEE_ADDRESS 			as "employeeAddress"
		      ,HIRE_DATE 					as "hireDate"
		      ,RETIRE_DATE 				    as "retireDate"
		      ,EMP_EMAIL					as "empEmail"
			  ,PASSWORD 					as "password"
		FROM EMP_MANAGE
		ORDER BY EMPLOYEE_ID
	</select>

	<select id="getEmp" parameterType="empManVO" resultType="empManVO">
		SELECT EMPLOYEE_ID  				as "employeeId"
		      ,EMPLOYEE_NAME   				as "employeeName"
		      ,CERTIFICATED_EXPIRED_DATE    as "certificatedExpiredDate"
		      ,EMPLOYEE_BIRTH       		as "employeeBirth"
		      ,EMPLOYEE_ADDRESS 			as "employeeAddress"
		      ,HIRE_DATE 					as "hireDate"
		      ,RETIRE_DATE 				    as "retireDate"
		      ,EMP_EMAIL					as "empEmail"
			  ,PASSWORD 					as "password"
		FROM EMP_MANAGE
	
		<where>
		<if test=" selector!=null and selector=='employeeId'">
			EMPLOYEE_ID=#{empEmail}
		</if>
		<if test=" selector!=null and selector=='empEmail'">
			EMP_EMAIL like '%'||#{empEmail}||'%' 
			
		</if>
	
	<!-- <if test="employeeName!=null and employeeName!=''">
			EMPLOYEE_NAME=${employeeName} $는 ""떼고 
		</if>
		<if test="certificatedExpiredDate!=null and certificatedExpiredDate!=''">
			CERTIFICATED_EXPIRED_DATE=${certificatedExpiredDate}
		</if>
		<if test="employeeBirth!=null and employeeBirth!=''">
			EMPLOYEE_BIRTH=${employeeBirth}
		</if>
		<if test="employeeAddress!=null and employeeAddress!=''">
			EMPLOYEE_ADDRESS=${employeeAddress}
		</if>
		<if test="hireDate!=null and hireDate!=''">
			HIRE_DATE=${hireDate}
		</if>
		<if test="retireDate!=null and retireDate!=''">
			RETIRE_DATE=${retireDate}
		</if>			

		<if test="password!=null and password!=''">
			PASSWORD=${password}
		</if>-->
	
		</where>
	</select>

	<select id="getlogin" parameterType="empManVO" resultType="empManVO">
		SELECT EMPLOYEE_ID  				
		      ,EMPLOYEE_NAME   				
		FROM EMP_MANAGE
	
		<where>
		<if test="employeeId!=null and employeeId!=''">
			EMPLOYEE_ID=#{employeeId}
		</if>
		<if test="password!=null and password!=''">
			AND PASSWORD=#{password}
		</if>
		</where>
	</select>

<insert id="insertEmp" parameterType="empManVO">
<selectKey order="BEFORE" keyProperty="employeeId" resultType="string" >
	SELECT NVL(MAX(EMPLOYEE_ID),0)+1 FROM EMP_MANAGE
</selectKey>
		INSERT INTO EMP_MANAGE (EMPLOYEE_ID,
								EMPLOYEE_NAME,
								CERTIFICATED_EXPIRED_DATE,
								EMPLOYEE_BIRTH,
								EMPLOYEE_ADDRESS,
								HIRE_DATE,
								RETIRE_DATE,
								EMP_EMAIL,
								PASSWORD)
		VALUES (#{employeeId} ,
				#{employeeName},
				#{certificatedExpiredDate},
				#{employeeBirth},
				#{employeeAddress},
				#{hireDate},
				#{retireDate},
				#{empEmail},
				#{password} )
			
</insert>

<update id="updateEmp" parameterType="empManVO">

		UPDATE EMP_MANAGE
		SET EMPLOYEE_ID = #{employeeId},
			EMPLOYEE_NAME = #{employeeName},
			CERTIFICATED_EXPIRED_DATE =#{certificatedExpiredDate},
			EMPLOYEE_BIRTH =#{employeeBirth},
			EMPLOYEE_ADDRESS =#{employeeAddress},
			HIRE_DATE =#{hireDate},
			RETIRE_DATE =#{retireDate},
			EMP_EMAIL =#{empEmail},
			PASSWORD = #{password} 
			WHERE EMPLOYEE_ID =#{employeeId}
	
	
</update>

<delete id="deleteEmp" parameterType="empManVO">

		DELETE FROM EMP_MANAGE 
		<where>
		<if test=" selector!=null and selector=='employeeId'">
			EMPLOYEE_ID=#{empEmail}
		</if>
		</where>
</delete>

<delete id="deleteEmpList" parameterType="list">

		DELETE FROM EMP_MANAGE 
		WHERE EMPLOYEE_ID=#{employeeId}

</delete>

</mapper>
