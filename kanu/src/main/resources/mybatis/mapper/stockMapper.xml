<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kanu.web.stock.impl.StockDAO">

<!-- 전체 조회  -->
	<select id="getStockList" resultType="map">
		SELECT	PRODUCT_ID			as "productId",
				PRODUCT_LOCATION	as "productLocation",
				STOCK_QUANTITY		as "stockQuantity",
				MINIMUM_QUANTITY	as "minimumQuantity",
				SUPPLIER_ID			as "supplierId"
		FROM STOCK
		<where>
			<if test="productId != null and productId != ''">
				STOCK.PRODUCT_ID = #{productId}
0			</if>
			<!-- <if test="supplierId != null and supplierId != ''">
				STOCK.SUPPLIER_ID = #{supplierId}
			</if> -->
		</where>
		ORDER BY PRODUCT_ID
	</select>	
<!-- 단건 조회  -->
	
	<!-- <select id="getStock" resultType="stockVO" parameterType="string">
		<![CDATA[
		SELECT 	PRODUCT_ID,
				PRODUCT_LOCATION,
				STOCK_QUANTITY,
				MINIMUM_QUANTITY,
				SUPPLIER_ID
		FROM	STOCK
		WHERE	PRODUCT_ID = #{id}
		]]>
	</select> -->
<!-- 등록 -->
	<insert id="insertStock" parameterType="stockVO">
	
		<selectKey keyProperty="productId" resultType="string" order="BEFORE">
			SELECT MAX(PRODUCT_ID)+1 FROM STOCK
		</selectKey>
		
		INSERT INTO STOCK (
							PRODUCT_ID,
							PRODUCT_LOCATION,
							MINIMUM_QUANTITY,
							SUPPLIER_ID
							)
		VALUES	(
					#{productId},
					#{productLocation},
					#{minimumQuantity},
					#{supplierId}
				)
	</insert>
<!-- 수정 -->
	<update id="updateStock" parameterType="stockVO">
		UPDATE STOCK SET
					PRODUCT_ID = #{productId},
					PRODUCT_LOCATION = #{productLocation},
					STOCK_QUANTITY = #{stockQuantity},
					MINIMUM_QUANTITY = #{minimumQuantity},
					SUPPLIER_ID = #{supplierId}
		WHERE PRODUCT_ID = #{productId}
		
	</update>
<!-- 단건 삭제 -->
	<delete id="deleteSomething" parameterType="int">
		DELETE FROM STOCK
		WHERE PRODUCT_ID = #{id}
	</delete>
	
	
<!-- 다건 삭제 -->	
	<delete id="deleteStockList">
		DELETE FROM STOCK
		WHERE PRODUCT_ID IN
		<foreach collection="list" item="item" open="(" close=")" separator=",">
		#{item}
		</foreach>
	</delete>
</mapper>
